[
  {
    "title": "HPC、AI与云计算：当智能时代三叉戟在亚马逊云科技完美融合",
    "description": "希腊神话中，海神与丰收之神波塞冬手持三叉戟，为航船保驾护航，为农人带来清泉。从此之后，三叉戟经常用来比喻三种事物紧密结合，形成合力，比如足球世界很多球队都有经典的锋线三叉戟。",
    "url": "https://segmentfault.com/a/1190000042338012",
    "author": "六一",
    "home_url": "https://segmentfault.com/u/suicidal_romantic_scoundrel",
    "votes": "1",
    "rank": 1
  },
  {
    "title": "Vue 状态管理未来样子",
    "description": "微信搜索 【大迁世界】, 我会第一时间和你分享前端行业趋势，学习途径等等。本文 GitHub [链接] 已收录，有一线大厂面试完整考点、资料以及我的系列文章。",
    "url": "https://segmentfault.com/a/1190000042290572",
    "author": "前端小智",
    "home_url": "https://segmentfault.com/u/minnanitkong",
    "votes": "2",
    "rank": 2
  },
  {
    "title": "完整实现-通过DelayQueue实现延时任务",
    "description": "实现延时任务有很多的方法，网上关于延时任务的实现的文章已经不少了。比如：实现延时任务的10种方法等等。但是这些文章基本上都是将方法大概的列举一下，给出部分示例代码，对于有经验的老程序员可能一看就知道...",
    "url": "https://segmentfault.com/a/1190000042339386",
    "author": "字母哥博客",
    "home_url": "https://segmentfault.com/u/zimug",
    "votes": "1",
    "rank": 3
  },
  {
    "title": "阿里三面：MQ 消息丢失、重复、积压问题，如何解决？",
    "description": "面试官在面试候选人时，如果发现候选人的简历中写了在项目中使用了 MQ 技术（如 Kafka、RabbitMQ、RocketMQ），基本都会抛出一个问题：在使用 MQ 的时候，怎么确保消息 100% 不丢失？",
    "url": "https://segmentfault.com/a/1190000042338722",
    "author": "Java架构师",
    "home_url": "https://segmentfault.com/u/taozi_60b0b3c71b1a8",
    "votes": "1",
    "rank": 4
  },
  {
    "title": "Spring AOP全面详解(超级详细)",
    "description": "AOP （Aspect Orient Programming）,直译过来就是 面向切面编程,AOP 是一种编程思想，是面向对象编程（OOP）的一种补充。",
    "url": "https://segmentfault.com/a/1190000042338414",
    "author": "mikechen",
    "home_url": "https://segmentfault.com/u/user_fx09jed8",
    "votes": "1",
    "rank": 5
  },
  {
    "title": "Spring+Vue增删改查实例",
    "description": "原文链接代码地址前端地址：[链接]后端地址：[链接]1 数据库创建MySQL数据库。表名为user_data，人员信息有number、name。效果如下：2 前端2.1 创建项目打开cmd，输入ui命令： {代码...} 若没有反应，可能是版本...",
    "url": "https://segmentfault.com/a/1190000042337719",
    "author": "代码的路",
    "home_url": "https://segmentfault.com/u/zbzcdzf",
    "votes": "1",
    "rank": 6
  },
  {
    "title": "Iterator与Generator",
    "description": "Iterator 提供了一种统一的接口机制，为各种不同数据结构提供统一的访问机制。定义 Iterator 就是提供一个具有 next() 方法的对象，每次调用 next() 都会返回一个结果对象，该结果对象有两个属性，value 表示当前...",
    "url": "https://segmentfault.com/a/1190000042341637",
    "author": "袋鼠云数栈UED",
    "home_url": "https://segmentfault.com/u/daishuyunshuzhanqianduan",
    "votes": "1",
    "rank": 7
  }
]